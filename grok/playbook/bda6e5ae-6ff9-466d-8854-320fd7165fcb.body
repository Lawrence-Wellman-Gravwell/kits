Gravwell is an unstructured analytics platform. We pride ourselves on the ability to ingest first and ask questions later. While there is a push towards structured logging which allows for much easier interaction, in the real world logs are all over the board. It is pretty rare for us to see a shop that has a uniform and strict logging structure across all their own applications, let alone across all their infrastructure. This means that we often have to fall back on blunt instruments to get good visibility and extract the data we need.

Enter the regular expression, regular expressions enable users to generate state machines that can extract fields from unstructured data at runtime. The Gravwell regex search module is hammer taped to a scalpel, a swiss army chainsaw if you will. You CAN accomplish almost anything with enough sweat and the right regex.  However, regular expressions are hard to write, easy to screw up, and almost impossible to remember.  THE book on regular expressions "Mastering Regular Expressions" by Jeffrey Friedl is 544 pages long.  I have books that cover entire computing languages that aren't that long, and the regular expressions book is compact and well written.  They are just THAT complicated.

This is where grok comes in, grok uses abstracted tokens so that mere mortals can build out complex and readable regular expressions. Some other platforms use grok to tokenize input at ingest time, we use it to do extract fields at query time.

To really drive home how much power grok can provide, let's look at a complete regular expression designed to extract every field in an Apache Combined Access Log:

```(?P<ip>\S+) (?P<remote_log_name>\S+) (?P<userid>\S+) \[(?P<date>\S+) ?(?P<timezone>\S+)?\] \"(?P<request_method>\S+) (?P<path>\S+) (?P<request_version>HTTP/\d+\.?\d*)?\" (?P<status>\d+) (?P<length>\d+) \"(?P<referrer>[^\"]+)\" \"(?P<user_agent>[^\"]+)\"```

I consider myself above average when it comes to regular expressions, but that is barely readable.  You might even say it's too hard to grok.

If we were to use grok, we could replace all that mess with one token:

```%{COMBINEDAPACHELOG}```

Grok is basically a macro system for regular expressions. Under the hood, grok identifies known tokens and performs a recursive expansion to generate a complete regular expression.

#List of patterns

The following are a list of patterns present in this kit. View the `grok` resource file for further details into these patterns or you can view the file here: https://raw.githubusercontent.com/gravwell/resources/master/grok/all.grok

Full documentation for the grok module can be found in our docs at https://docs.gravwell.io/docs/#!search/grok/grok.md


```
COMMONAPACHELOG
COMBINEDAPACHELOG

S3_REQUEST_LINE
S3_ACCESS_LOG

ELB_URIPATHPARAM
ELB_URI
ELB_REQUEST_LINE
ELB_ACCESS_LOG

BACULA_HOST
BACULA_VOLUME
BACULA_DEVICE
BACULA_DEVICEPATH
BACULA_CAPACITY
BACULA_VERSION
BACULA_JOB
BACULA_LOG_MAX_CAPACITY
BACULA_LOG_END_VOLUME
BACULA_LOG_NEW_VOLUME
BACULA_LOG_NEW_LABEL
BACULA_LOG_WROTE_LABEL
BACULA_LOG_NEW_MOUNT
BACULA_LOG_NOOPEN
BACULA_LOG_NOOPENDIR
BACULA_LOG_NOSTAT
BACULA_LOG_NOJOBS
BACULA_LOG_ALL_RECORDS_PRUNED
BACULA_LOG_BEGIN_PRUNE_JOBS
BACULA_LOG_BEGIN_PRUNE_FILES
BACULA_LOG_PRUNED_JOBS
BACULA_LOG_PRUNED_FILES
BACULA_LOG_ENDPRUNE
BACULA_LOG_STARTJOB
BACULA_LOG_STARTRESTORE
BACULA_LOG_USEDEVICE
BACULA_LOG_DIFF_FS
BACULA_LOG_JOBEND
BACULA_LOG_NOPRUNE_JOBS
BACULA_LOG_NOPRUNE_FILES
BACULA_LOG_VOLUME_PREVWRITTEN
BACULA_LOG_READYAPPEND
BACULA_LOG_CANCELLING
BACULA_LOG_MARKCANCEL
BACULA_LOG_CLIENT_RBJ
BACULA_LOG_VSS
BACULA_LOG_MAXSTART
BACULA_LOG_DUPLICATE
BACULA_LOG_NOJOBSTAT
BACULA_LOG_FATAL_CONN
BACULA_LOG_NO_CONNECT
BACULA_LOG_NO_AUTH
BACULA_LOG_NOSUIT
BACULA_LOG_NOPRIOR
BACULA_LOG_JOB
BACULA_LOGLINE

BRO_HTTP
BRO_DNS
BRO_CONN
BRO_FILES

EXIM_FLAGS
EXIM_DATE
EXIM_PID
EXIM_QT
EXIM_EXCLUDE_TERMS
EXIM_REMOTE_HOST
EXIM_INTERFACE
EXIM_PROTOCOL
EXIM_MSG_SIZE
EXIM_HEADER_ID
EXIM_SUBJECT

NETSCREENSESSIONLOG

CISCOTAG
CISCOTIMESTAMP
CISCO_TAGGED_SYSLOG
CISCO_ACTION
CISCO_REASON
CISCO_DIRECTION
CISCO_INTERVAL
CISCO_XLATE_TYPE
CISCOFW104001
CISCOFW104002
CISCOFW104003
CISCOFW104004
CISCOFW105003
CISCOFW105004
CISCOFW105005
CISCOFW105008
CISCOFW105009
CISCOFW106001
CISCOFW106006_106007_106010
CISCOFW106014
CISCOFW106015
CISCOFW106021
CISCOFW106023
CISCOFW106100_2_3
CISCOFW106100
CISCOFW110002
CISCOFW302010
CISCOFW302013_302014_302015_302016
CISCOFW302020_302021
CISCOFW305011
CISCOFW313001_313004_313008
CISCOFW313005
CISCOFW321001
CISCOFW402117
CISCOFW402119
CISCOFW419001
CISCOFW419002
CISCOFW500004
CISCOFW602303_602304
CISCOFW710001_710002_710003_710005_710006
CISCOFW713172
CISCOFW733100

SHOREWALL

SYSLOGPROG
SYSLOGFACILITY
SYSLOGBASE


HAPROXYTIME
HAPROXYDATE
HAPROXYCAPTUREDREQUESTHEADERS
HAPROXYCAPTUREDRESPONSEHEADERS
HAPROXYHTTPBASE
HAPROXYHTTP
HAPROXYTCP

JAVACLASS
JAVAFILE
JAVAMETHOD
JAVASTACKTRACEPART
JAVATHREAD
JAVALOGMESSAGE
CATALINA_DATESTAMP
TOMCAT_DATESTAMP
CATALINALOG
TOMCATLOG

RT_FLOW_EVENT
RT_FLOW1
RT_FLOW2
RT_FLOW3

SYSLOG5424PRINTASCII
SYSLOGBASE2
SYSLOGPAMSESSION

CRON_ACTION
CRONLOG

SYSLOGLINE
SYSLOG5424PRI
SYSLOG5424SD
SYSLOG5424BASE
SYSLOG5424LINE

MCOLLECTIVE
MCOLLECTIVEAUDIT

MONGO_QUERY
MONGO_WORDDASH
MONGO_SLOWQUERY
MONGO3_SEVERITY
MONGO3_COMPONENT
MONGO3_LOG

NAGIOSTIME
NAGIOS_TYPE_CURRENT_SERVICE_STATE
NAGIOS_TYPE_CURRENT_HOST_STATE
NAGIOS_TYPE_SERVICE_NOTIFICATION
NAGIOS_TYPE_HOST_NOTIFICATION
NAGIOS_TYPE_SERVICE_ALERT
NAGIOS_TYPE_HOST_ALERT
NAGIOS_TYPE_SERVICE_FLAPPING_ALERT
NAGIOS_TYPE_HOST_FLAPPING_ALERT
NAGIOS_TYPE_SERVICE_DOWNTIME_ALERT
NAGIOS_TYPE_HOST_DOWNTIME_ALERT
NAGIOS_TYPE_PASSIVE_SERVICE_CHECK
NAGIOS_TYPE_PASSIVE_HOST_CHECK
NAGIOS_TYPE_SERVICE_EVENT_HANDLER
NAGIOS_TYPE_HOST_EVENT_HANDLER
NAGIOS_TYPE_EXTERNAL_COMMAND
NAGIOS_TYPE_TIMEPERIOD_TRANSITION
NAGIOS_EC_DISABLE_SVC_CHECK
NAGIOS_EC_ENABLE_SVC_CHECK
NAGIOS_EC_DISABLE_HOST_CHECK
NAGIOS_EC_ENABLE_HOST_CHECK
NAGIOS_EC_PROCESS_SERVICE_CHECK_RESULT
NAGIOS_EC_PROCESS_HOST_CHECK_RESULT
NAGIOS_EC_SCHEDULE_SERVICE_DOWNTIME
NAGIOS_EC_SCHEDULE_HOST_DOWNTIME
NAGIOS_EC_DISABLE_HOST_SVC_NOTIFICATIONS
NAGIOS_EC_ENABLE_HOST_SVC_NOTIFICATIONS
NAGIOS_EC_DISABLE_HOST_NOTIFICATIONS
NAGIOS_EC_ENABLE_HOST_NOTIFICATIONS
NAGIOS_EC_DISABLE_SVC_NOTIFICATIONS
NAGIOS_EC_ENABLE_SVC_NOTIFICATIONS
NAGIOS_WARNING
NAGIOS_CURRENT_SERVICE_STATE
NAGIOS_CURRENT_HOST_STATE
NAGIOS_SERVICE_NOTIFICATION
NAGIOS_HOST_NOTIFICATION
NAGIOS_SERVICE_ALERT
NAGIOS_HOST_ALERT
NAGIOS_SERVICE_FLAPPING_ALERT
NAGIOS_HOST_FLAPPING_ALERT
NAGIOS_SERVICE_DOWNTIME_ALERT
NAGIOS_HOST_DOWNTIME_ALERT
NAGIOS_PASSIVE_SERVICE_CHECK
NAGIOS_PASSIVE_HOST_CHECK
NAGIOS_SERVICE_EVENT_HANDLER
NAGIOS_HOST_EVENT_HANDLER
NAGIOS_TIMEPERIOD_TRANSITION
NAGIOS_EC_LINE_DISABLE_SVC_CHECK
NAGIOS_EC_LINE_DISABLE_HOST_CHECK
NAGIOS_EC_LINE_ENABLE_SVC_CHECK
NAGIOS_EC_LINE_ENABLE_HOST_CHECK
NAGIOS_EC_LINE_PROCESS_SERVICE_CHECK_RESULT
NAGIOS_EC_LINE_PROCESS_HOST_CHECK_RESULT
NAGIOS_EC_LINE_DISABLE_HOST_SVC_NOTIFICATIONS
NAGIOS_EC_LINE_DISABLE_HOST_NOTIFICATIONS
NAGIOS_EC_LINE_DISABLE_SVC_NOTIFICATIONS
NAGIOS_EC_LINE_ENABLE_HOST_SVC_NOTIFICATIONS
NAGIOS_EC_LINE_ENABLE_HOST_NOTIFICATIONS
NAGIOS_EC_LINE_ENABLE_SVC_NOTIFICATIONS
NAGIOS_EC_LINE_SCHEDULE_HOST_DOWNTIME
NAGIOSLOGLINE
NGUSER

NOTDQUOTE
DAY2

NGINXERRTIME
NGINXACCESS
NGINXERROR

POSTGRESQL

RAILS_CONSTROLLER
RAIL_ACTION
RCONTROLLER
RAILS_TIMESTAMP
RAILS3HEAD
RPROCESSING
RAILS3PROFILE
RAILS3FOOT
RAILS_CONTEXT
RAILS3

REDISTIMESTAMP
REDISLOG
REDISLOG1
REDISLOG2

RUBY_LOGGER
```