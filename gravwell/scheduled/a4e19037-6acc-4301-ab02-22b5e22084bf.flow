{"id":"gravwell@0.0.1","nodes":{"3568":{"id":3568,"name":"Go","inputs":{"in":{"connections":[]}},"outputs":{"out":{"connections":[{"node":3571,"input":"in","data":{}}]}},"data":{"outputs":{"type":"Array","array_elements":[{"type":"Constant","value":"output"}]},"code":{"type":"Constant","value":"package main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"gravwell\"\n\t\"strings\"\n)\n\nvar payload = gravwell.Payload\n\nfunc addIngestersStats() (output string) {\n\tstats, err := gravwell.Ingesters()\n\tif err != nil {\n\t\treturn\n\t}\n\n\tvar lastDaySize uint64\n\tvar lastDayCount uint64\n\n\tfor _, s := range stats {\n\t\tlastDaySize += s.LastDaySize\n\t\tlastDayCount += s.LastDayCount\n\t}\n\n\tbuffer := new(bytes.Buffer)\n\tfmt.Fprintf(buffer, \"%s=%d \", \"lastdaysize\", lastDaySize)\n\tfmt.Fprintf(buffer, \"%s=%d \", \"lastdaycount\", lastDayCount)\n\n\treturn buffer.String()\n}\n\nfunc main() {\n\tvar output string\n\toutput += addIngestersStats()\n\n\tpayload.Set(\"output\", strings.TrimSpace(output))\n\n\treturn\n}\n"},"__meta":{"nickname":null,"notes":null,"inputs":[],"values":{"outputs":[{"type":{"kind":"string"},"value":"output"}],"code":{"type":{"default":"package main\n\nimport (\n\t\"gravwell\"\n)\n\n/* payload implements a Get and Set, like this interface: \ntype payload interface {\n\tGet(string) (interface{}, error)\n\tSet(string, interface{}) error\n}\n*/\n\nvar payload = gravwell.Payload\n\nfunc main() {\n\treturn\n}","kind":"string:code-go"},"value":"package main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"gravwell\"\n\t\"strings\"\n)\n\nvar payload = gravwell.Payload\n\nfunc addIngestersStats() (output string) {\n\tstats, err := gravwell.Ingesters()\n\tif err != nil {\n\t\treturn\n\t}\n\n\tvar lastDaySize uint64\n\tvar lastDayCount uint64\n\n\tfor _, s := range stats {\n\t\tlastDaySize += s.LastDaySize\n\t\tlastDayCount += s.LastDayCount\n\t}\n\n\tbuffer := new(bytes.Buffer)\n\tfmt.Fprintf(buffer, \"%s=%d \", \"lastdaysize\", lastDaySize)\n\tfmt.Fprintf(buffer, \"%s=%d \", \"lastdaycount\", lastDayCount)\n\n\treturn buffer.String()\n}\n\nfunc main() {\n\tvar output string\n\toutput += addIngestersStats()\n\n\tpayload.Set(\"output\", strings.TrimSpace(output))\n\n\treturn\n}\n"}}},"__disabled":{"type":"Constant","value":false}},"position":[-736,-208]},"3571":{"id":3571,"name":"Ingest","inputs":{"in":{"connections":[{"node":3568,"output":"out","data":{}}]}},"outputs":{"out":{"connections":[]}},"data":{"tag":{"type":"Constant","value":"_ingesters_stats"},"input":{"type":"Variable","value":"output"},"splitlines":{"type":"Constant","value":false},"extracttimestamp":{"type":"Constant","value":false},"__meta":{"nickname":null,"notes":null,"inputs":[],"values":{"tag":{"type":{"kind":"string"},"value":"_ingesters_stats"},"input":{"type":{"kind":"variable"},"value":"output"},"splitlines":{"type":{"kind":"boolean"},"value":false},"extracttimestamp":{"type":{"kind":"boolean"},"value":false}}},"__disabled":{"type":"Constant","value":false}},"position":[-384,-208]}}}