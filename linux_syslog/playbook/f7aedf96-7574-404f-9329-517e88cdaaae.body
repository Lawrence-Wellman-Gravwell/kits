This kit provides dashboards and queries which operate on syslog data originating from Linux systems. It examines log entries originating from common Linux components such as the SSH server, sudo, cron, and systemd. Consider it a useful extension to the regular Syslog kit, which doesn't have any application-specific tools built into it.

# Getting syslog into Gravwell

The easiest way to get syslog entries into Gravwell is with the [Simple Relay ingester](https://docs.gravwell.io/#!ingesters/simple_relay.md). The documentation contains more complete instructions for configuration, but in brief, you can configure the ingester to accept syslog messages over TCP with a stanza like this:

<pre>
[Listener "syslog"]
    Bind-String=0.0.0.0:601
    Reader-Type=RFC5424
</pre>

To use UDP instead:

<pre>
[Listener "syslog"]
    Bind-String=udp://0.0.0.0:514
    Reader-Type=RFC524
</pre>

Once you have configured Simple Relay, you just need to make your Linux systems direct syslog to it. Configuration details will vary, but here's how to make rsyslogd send logs to syslog.example.com over TCP:

<pre>
*.* @@syslog.example.com:601;RSYSLOG_SyslogProtocol23Format
</pre>

# Dashboards

This kit includes three dashboards, one displaying information about SSH, one showing information about sudo use, and one giving an overview of cron activity.

The SSH dashboard shows tables and maps for failed & successful SSH logins. It also includes a table which melds the two, showing you IPs which have had both successful & failed SSH logins; this can potentially help detect successful brute-forcing.

The sudo dashboard shows who has been using sudo and what commands they ran. It also shows who has sudo failures--either due to a mistyped password, or because the user doesn't have sudo permission. For completeness, it also shows invocations of the "su" command.

The cron dashboard lets you know when someone has modified their crontab. It also tracks how many cron jobs have run for each user, and lets you look at a list of commands which have run in cron.

# Actionables

The kit contains actionables to help with SSH investigations. You can select a username and see failed/successful logins for that user. You can also click an IP address to search for failed/successful connections from that IP. Selecting a hostname lets you search for failed/successful logins on that system.

There is also an actionable which lets you select an SSH public key signature (e.g. "RSA SHA256:nndxv0GlmyfsavK1ArKwtg9n7JxyuzQFrOyU9B8McdZ") and find any successful logins which used that key. These public key signatures are found in the ssh daemon's logs.
